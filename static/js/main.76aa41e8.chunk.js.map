{"version":3,"sources":["Components/Form/form.module.css","Components/ContactList/ContactList.module.css","Components/ContactFilter/ContactFilter.module.css","Components/Container/Container.module.css","redux/contacts/actions.js","Components/Form/index.jsx","Components/ContactList/ContactList.jsx","Components/ContactFilter/ContactFilter.jsx","Components/Container/Container.jsx","App.js","redux/contacts/reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","filterContact","Form","state","nameInputId","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","evt","preventDefault","props","onAddContact","reset","this","className","style","form","onSubmit","label_text","htmlFor","form_input","type","onChange","pattern","title","required","add_button","Component","connect","dispatch","actions","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","contacts","items","onDeleteContact","contactList","map","contactItem","contactName","deleteBtm","onClick","Container","children","App","createReducer","_","combineReducers","contactPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.76aa41e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__2iAmi\",\"label_text\":\"form_label_text__3EH1M\",\"form_input\":\"form_form_input__2KObG\",\"add_button\":\"form_add_button__XsQZn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3yZp4\",\"contactItem\":\"ContactList_contactItem__gYzPY\",\"contactName\":\"ContactList_contactName__11_sl\",\"deleteBtm\":\"ContactList_deleteBtm__2iYgs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactFilter_form__Pi6Wi\",\"label_text\":\"ContactFilter_label_text__3o_NB\",\"form_input\":\"ContactFilter_form_input__13JtS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__-GSzC\"};","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', ({name, number}) =>({\r\n        payload: {\r\n            id: shortid.generate(),\r\n            name,\r\n            number,\r\n        },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst filterContact = createAction('contacts/filterContact');\r\n\r\n\r\n//eslint-disable-next-line import/no-anonymous-default-export\r\n\r\nexport default {addContact, deleteContact, filterContact};","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport style from '../Form/form.module.css';\r\nimport actions from '../../redux/contacts/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Form extends Component {\r\n    state ={\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\nnameInputId = shortid.generate();\r\nnumberInputId = shortid.generate();\r\n\r\nhandleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n      };\r\n    \r\n      \r\nhandleSubmit = evt => {\r\n        evt.preventDefault();\r\n        this.props.onAddContact(this.state);\r\n        this.reset();\r\n      };\r\n\r\nreset =() =>{\r\n    this.setState({ name: '', number: '' });\r\n};\r\n\r\n    render (){\r\n        const { number, name } = this.state;\r\n        return(\r\n            <form className={style.form} onSubmit ={this.handleSubmit}>\r\n                               \r\n                <label className={style.label_text} htmlFor ={this.nameInputId}>\r\n                    Name <input className={style.form_input}  type=\"text\"\r\n                    onChange = {this.handleChange}\r\n                    value={name}\r\n                    name =\"name\"\r\n                    id = {this.nameInputId}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    />\r\n                </label>\r\n                \r\n                <label className={style.label_text} htmlFor ={this.numberInputId}>\r\n                    Number <input className={style.form_input} type=\"tell\"\r\n                    onChange = {this.handleChange}\r\n                    value={number}\r\n                    name =\"number\"\r\n                    id = {this.numberInputId}\r\n                    pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                    title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                    required\r\n                    />\r\n                </label>                \r\n                <button className={style.add_button} type=\"submit\"> Add contact </button>                   \r\n            </form>\r\n                )}\r\n        };\r\n\r\n        const mapDispatchToProps = dispatch => ({\r\n            onAddContact: ({ name, number }) => dispatch(actions.addContact({name,number})),\r\n        })\r\n\r\n\r\n\r\n        export default connect(null,mapDispatchToProps)(Form);","import { connect } from 'react-redux';\r\nimport style from '../ContactList/ContactList.module.css';\r\nimport actions from '../../redux/contacts/actions';\r\n\r\nconst ContactList = ({contacts, onDeleteContact}) => (\r\n<ul className ={style.contactList}>\r\n    {contacts.map(({name, id, number}) =>(\r\n        <li key ={id} className = {style.contactItem}>\r\n            <p className = {style.contactName}>{name}\r\n                {': '}\r\n                {number}\r\n                </p>\r\n                <button className ={style.deleteBtm} onClick ={() => onDeleteContact(id)}>Delete</button>\r\n        </li>\r\n    )\r\n\r\n    )}\r\n</ul>\r\n)\r\n\r\nconst getVisibleContacts =(allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n    return allContacts.filter(({name}) => \r\n    name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = ({contacts:{items,filter}}) => ({\r\n    contacts:getVisibleContacts(items,filter)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact:(id) => dispatch(actions.deleteContact(id)),\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactList);","import style from '../ContactFilter/ContactFilter.module.css';\r\nimport actions from '../../redux/contacts/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst ContactFilter = ({value, onChange}) =>(\r\n            <form className={style.form}>\r\n                <label className={style.label_text}>\r\n                Phone book search\r\n                    <input className={style.form_input}\r\n                    type = \"text\"\r\n                    value = {value}\r\n                    name=\"text\"\r\n                    onChange ={onChange}\r\n                    />\r\n                </label>\r\n            </form>\r\n            \r\n);\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    value: state.contacts.filter,\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: e => dispatch(actions.filterContact(e.currentTarget.value)),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactFilter);\r\n\r\n ","import style from '../Container/Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={style.Container}> {children} </div>\r\n  );\r\n  export default Container;","import { Component } from 'react';\r\nimport Form from './Components/Form/';\r\nimport ContactList from './Components/ContactList';\r\nimport ContactFilter from './Components/ContactFilter';\r\nimport Container from './Components/Container';\r\n\r\nclass App extends Component{\r\n\r\nrender (){\r\n\r\n  return(\r\n    <Container>\r\n      <h1>Phonebook</h1> \r\n      <Form onAddContact = {this.addContact}\r\n     />\r\n     <ContactFilter/>\r\n      <ContactList/>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from '../../redux/contacts/actions';\r\n\r\n\r\nconst contactBoock = [\r\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n];\r\n\r\n\r\n\r\nconst items = createReducer(contactBoock, {\r\n    [actions.addContact]: (state, {payload}) => [...state, payload],\r\n    [actions.deleteContact]:(state, {payload}) => \r\n    state.filter(({id}) => id !== payload ),\r\n});\r\n\r\n\r\nconst filter = createReducer('', {\r\n    [actions.filterContact]:( _ , {payload} ) => payload,\r\n    //поставила подчеркивание вместо state\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport { persistStore, persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts/reducer';\r\n\r\n\r\nconst contactPersistConfig = {\r\n  key: 'PhoneBoock',\r\n  storage,\r\n  blacklist: ['filter'],\r\n}\r\n\r\nconst middleware = [...getDefaultMiddleware ({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n  }\r\n}), \r\nlogger\r\n];\r\n\r\n\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n      contacts:persistReducer(contactPersistConfig,contactReducer),\r\n    },\r\n    middleware,\r\n    devTools:process.env.NODE_ENV ==='development',\r\n})\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default {store, persistor};  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}